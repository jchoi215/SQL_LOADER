
ANSWER 1:

SELECT S.FIRST_NAME FROM STUDENT as S INNER JOIN GRADE ON GRADE.STUDENT_ID = S.ID 
	INNER JOIN COURSE_OFFERING    ON    COURSE_OFFERING.ID = GRADE.COURSE_OFFERING_ID
    INNER JOIN INSTRUCTOR         ON    COURSE_OFFERING.INSTRUCTOR_ID = INSTRUCTOR.ID
    WHERE INSTRUCTOR.FIRST_NAME= 'ERIC'
    GROUP BY S.FIRST_NAME
    HAVING COUNT(*) = (SELECT COUNT(*) FROM INSTRUCTOR as I INNER JOIN COURSE_OFFERING ON COURSE_OFFERING.INSTRUCTOR_ID = I.id where I.FIRST_NAME = 'Eric');

ANSWER 2:

SELECT S.FIRST_NAME FROM STUDENT as S INNER JOIN GRADE ON GRADE.STUDENT_ID = S.ID 
	INNER JOIN COURSE_OFFERING    ON    COURSE_OFFERING.ID = GRADE.COURSE_OFFERING_ID
    INNER JOIN INSTRUCTOR         ON    COURSE_OFFERING.INSTRUCTOR_ID = INSTRUCTOR.ID
    WHERE S.FIRST_NAME 
		
		NOT IN (SELECT S.FIRST_NAME FROM STUDENT as S INNER JOIN GRADE ON GRADE.STUDENT_ID = S.ID 
		INNER JOIN COURSE_OFFERING    ON    COURSE_OFFERING.ID = GRADE.COURSE_OFFERING_ID
		INNER JOIN INSTRUCTOR         ON    COURSE_OFFERING.INSTRUCTOR_ID = INSTRUCTOR.ID
		WHERE INSTRUCTOR.FIRST_NAME = 'ERIC'
		GROUP BY S.FIRST_NAME)
    
    GROUP BY S.FIRST_NAME;

ANSWER 3:

SELECT COUNT(S.FIRST_NAME) AS NUM_STUDENTS, AVG(GRADE.GRADE) AS GPA FROM STUDENT as S INNER JOIN GRADE ON GRADE.STUDENT_ID = S.ID 
	INNER JOIN COURSE_OFFERING    ON    COURSE_OFFERING.ID = GRADE.COURSE_OFFERING_ID
    INNER JOIN INSTRUCTOR         ON    COURSE_OFFERING.INSTRUCTOR_ID = INSTRUCTOR.ID
    WHERE S.FIRST_NAME 
		
		NOT IN (SELECT S.FIRST_NAME FROM STUDENT as S INNER JOIN GRADE ON GRADE.STUDENT_ID = S.ID 
		INNER JOIN COURSE_OFFERING    ON    COURSE_OFFERING.ID = GRADE.COURSE_OFFERING_ID
		INNER JOIN INSTRUCTOR         ON    COURSE_OFFERING.INSTRUCTOR_ID = INSTRUCTOR.ID
		WHERE INSTRUCTOR.FIRST_NAME = 'ERIC'
		GROUP BY S.FIRST_NAME)


ANSWER 4:

SELECT COURSE.ID FROM COURSE
	WHERE COURSE.ID 
    NOT IN(SELECT COURSE_OFFERING.COURSE_ID FROM STUDENT as S INNER JOIN GRADE ON GRADE.STUDENT_ID = S.ID 
	INNER JOIN COURSE_OFFERING    ON    COURSE_OFFERING.ID = GRADE.COURSE_OFFERING_ID
    INNER JOIN INSTRUCTOR         ON    COURSE_OFFERING.INSTRUCTOR_ID = INSTRUCTOR.ID
    WHERE INSTRUCTOR.FIRST_NAME = "Eric"
    GROUP BY COURSE_OFFERING.COURSE_ID
)

ANSWER 5:

 SELECT S.ID FROM STUDENT as S INNER JOIN GRADE ON GRADE.STUDENT_ID = S.ID 
	INNER JOIN COURSE_OFFERING    ON    COURSE_OFFERING.ID = GRADE.COURSE_OFFERING_ID
    INNER JOIN INSTRUCTOR         ON    COURSE_OFFERING.INSTRUCTOR_ID = INSTRUCTOR.ID
    WHERE INSTRUCTOR.FIRST_NAME = "ERIC" and S.ID 
    
    NOT IN(
		SELECT S.ID FROM STUDENT as S INNER JOIN GRADE ON GRADE.STUDENT_ID = S.ID 
		INNER JOIN COURSE_OFFERING    ON    COURSE_OFFERING.ID = GRADE.COURSE_OFFERING_ID
		INNER JOIN INSTRUCTOR         ON    COURSE_OFFERING.INSTRUCTOR_ID = INSTRUCTOR.ID
		WHERE INSTRUCTOR.FIRST_NAME != "Eric"
		GROUP BY S.ID
    )
    GROUP BY S.ID
    

ANSWER 6:

SELECT COURSE_OFFERING.COURSE_ID FROM STUDENT as S INNER JOIN GRADE ON GRADE.STUDENT_ID = S.ID 
	INNER JOIN COURSE_OFFERING    ON    COURSE_OFFERING.ID = GRADE.COURSE_OFFERING_ID
    INNER JOIN INSTRUCTOR         ON    COURSE_OFFERING.INSTRUCTOR_ID = INSTRUCTOR.ID
    WHERE INSTRUCTOR.FIRST_NAME= 'ERIC' and GRADE.GRADE < 60


PLEASE NOTE THIS SAYS: 

Find the IDs of all courses satisfying following conditions: (i) they are taught by Eric Lee; and (ii) no
student who has taken the course gets a score below 60. 

THUS 60 was NOT included
